# Summary
Actually it's possible to run integration test and unit test with the following goals:
- `mvn test` <- unit test
- `mnv integration-test` <- integration test

but surefire/failsafe segregate only this two type of tests which doesn't cover all the wide spectrum of modern tests like contract tests and container tests. but surefire/failsafe segregate only this two type of tests which doesn't cover all the wide spectrum of modern tests like contract tests and container tests.

## Expected benefit(s) / Improved feature(s)

1. segregate per subtype tests and not only IT and unit which is more precise
2. permits to run locally only a subset of tests
3. easy to identify errors in test in CI suite that use this convention (to simplify a pipeline ballon per type of test that can be red or green)
4. using profiles is more visibile to devs than `integration-test` goal

### Details

we can introduce a kind of segregation guided by maven profiles:
- `mvn verify` <- run all tests
- `mvn verify -PcontractTest` <- run only contractTest

### Example

```xml
  <profiles>
    <profile>
      <id>contractTest</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <configuration>
              <argLine>-Dfile.encoding=UTF8</argLine>
              <runOrder>random</runOrder>
              <includes>
                <include>**/*TestContract.java</include>
                <include>**/*TestContractKt.java</include>
              </includes>
              <excludes>
                <exclude>**/*Test.java</exclude>
                <exclude>**/*TestKt.java</exclude>
                <exclude>**/*ContainerTest.java</exclude>
                <exclude>**/*ContainerTestKt.java</exclude>
                <exclude>**/*TestKt.java</exclude>
                <exclude>**/*IT.java</exclude>
                <exclude>**/*ITKt.java</exclude>
              </excludes>
              <useSystemClassLoader>false</useSystemClassLoader>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
```